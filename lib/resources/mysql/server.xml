<server description="Stock Trader J2EE sample app">

    <!-- Enable features -->
    <featureManager>
        <feature>javaee-7.0</feature>
	    <feature>localConnector-1.0</feature>
        <feature>jsp-2.3</feature>
        <feature>jdbc-4.1</feature>
    </featureManager>

    <!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->

    <!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an
         encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element.
         Then uncomment the keyStore element. -->
    <!--
    <keyStore password=""/>
    -->

    <!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
        basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password,
        generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element.
        Then uncomment the user element. -->
    <basicRegistry id="basic" realm="BasicRealm">
        <!-- <user name="yourUserName" password="" />  -->
        <user password="{xor}Lz4sLChvLTs=" name="admin"></user>
    </basicRegistry>

    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint httpPort="9080" httpsPort="9443" host="*"
    	id="defaultHttpEndpoint">
    </httpEndpoint>

    <sslDefault sslRef="defaultSSLConfig" />
    <keyStore id="defaultKeyStore"
           location="MyKeyStoreFile.jks"
           type="JKS" password="myPassword"
           pollingRate="5s"
           updateTrigger="polled" />

    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>
	
	<dataSource id="jdbc" jndiName="jdbc/TradeDataSource" type="javax.sql.DataSource">
		<jdbcDriver libraryRef="JDBCLib"/>
		<properties databaseName="${env.DBName}" serverName="${env.DBServer}" portNumber="${env.DBPort}" user="${env.DBUsername}" password="${env.DBPassword}"/>
	</dataSource>
	
	<library id="JDBCLib">
		<fileset dir="${shared.resource.dir}/jdbc" includes="*.jar"/>
	</library>


    <applicationMonitor updateTrigger="mbean"/>

    <application id="CloudTrader" location="CloudTrader.war" name="CloudTrader"/>
</server>
